//CON EL EJEMPLO DEL LIBRO/AUTOR REALIZAR LOS SIGUIENTES CURSORES
//1. REALIZAR UN CURSOR QUE MUESTRE EL TITULO Y PRECIO DE TODOS LOS LIBROS
SELECT TITULO FROM LIBRO;
SELECT * FROM AUTOR;

CREATE OR REPLACE PROCEDURE PR_TITULO_PRECIO IS
    CURSOR LIBRO_INFO IS
        SELECT TITULO, PRECIO FROM LIBRO;
        
        --VARIABLES LOCALES
        LV_NOMBRE LIBRO.TITULO%TYPE;
        LV_PRECIO NUMBER;
BEGIN
    --ABRIR EL CURSOR
    OPEN LIBRO_INFO;
        DBMS_OUTPUT.PUT_LINE('<<<<<<<<<<<<<<<DETALLE DE LIBROS>>>>>>>>>>>>>>>>>>' );
    LOOP
        FETCH LIBRO_INFO INTO LV_NOMBRE, LV_PRECIO;
        EXIT WHEN LIBRO_INFO%NOTFOUND;
        
        --MOSTRASR LOS DATOS DEL CURSOR
        DBMS_OUTPUT.PUT_LINE('NOMBRE DEL LIBRO: ' || LV_NOMBRE  || ' TIENE UN PRECIO DE: $' || LV_PRECIO );
    END LOOP;
    CLOSE LIBRO_INFO;
END PR_TITULO_PRECIO;
/

BEGIN
    PR_TITULO_PRECIO;   
END;
/
//2. REALIZAR UN CURSOR QUE MUESTRE SOLO LOS LIBROS CON PRECIO MAYOR A 300 ORDENADOS POR PRECIO DESCENDENTE
CREATE OR REPLACE PROCEDURE PR_PRECIO_DESC IS
    CURSOR CURSOR_PRECIO IS
    
        SELECT TITULO, PRECIO FROM LIBRO WHERE PRECIO >300 ORDER BY PRECIO DESC;
        
        --VARIABLES LOCALES
        LV_NOMBRE LIBRO.TITULO%TYPE;
        LV_PRECIO NUMBER;
BEGIN
    OPEN CURSOR_PRECIO;
        DBMS_OUTPUT.PUT_LINE('<<<<<<<<<<<<<<<LIBROS DE MAS DE $300 PESOS>>>>>>>>>>>>>>>>>>' );
        LOOP
            FETCH CURSOR_PRECIO INTO LV_NOMBRE, LV_PRECIO;
            
            EXIT WHEN CURSOR_PRECIO%NOTFOUND;
            
            DBMS_OUTPUT.PUT_LINE('NOMBRE DEL LIBRO: ' || LV_NOMBRE  || ' TIENE UN PRECIO DE: $' || LV_PRECIO );
            
        END LOOP;
    CLOSE CURSOR_PRECIO;
END PR_PRECIO_DESC;
/

BEGIN
    PR_PRECIO_DESC;
END;
/


//3. REALIZAR UN CURSOR PARA MOSTRAR LAS VENTAS  (FECHA Y CANTIDAD) DE UN LIBRO DADO SU ID
CREATE OR REPLACE PROCEDURE PR_VENTAS_FECHA IS
    CURSOR CURSOR_VENTAS_FECHA IS
        SELECT LIBRO_ID, FECHA_VENTA, CANTIDAD FROM VENTA ORDER BY LIBRO_ID DESC;
        
        LV_ID_LIBRO NUMBER;
        LV_FECHA DATE;
        LV_CANTIDAD NUMBER;
BEGIN
    OPEN CURSOR_VENTAS_FECHA;
        DBMS_OUTPUT.PUT_LINE('<<<<<<<<<<<<<<<FECHA Y CANTIDAD DE VENTAS>>>>>>>>>>>>>>>>>>' );
        LOOP
            FETCH CURSOR_VENTAS_FECHA INTO LV_ID_LIBRO, LV_FECHA, LV_CANTIDAD;
            
            EXIT WHEN CURSOR_VENTAS_FECHA%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE('EL LIBRO CON ID: ' || LV_ID_LIBRO || ' VENDIO: ' || LV_CANTIDAD || ' UNIDADES EN LA FECHA: ' || LV_FECHA );
        END LOOP;
    CLOSE CURSOR_VENTAS_FECHA;
END PR_VENTAS_FECHA;
/

BEGIN
    PR_VENTAS_FECHA;
END;
/


//4. REALIZAR UN CURSOR PARA MOSTRAR CADA LIBRO CON LA CNTIDAD TOTAL VENDIDA
CREATE OR REPLACE PROCEDURE PR_TOTAL_VENTA IS
    CURSOR CURSOR_TOTAL IS
        SELECT LIBRO_ID, SUM(CANTIDAD) AS CANTIDAD_TOTAL FROM VENTA GROUP BY LIBRO_ID ORDER BY CANTIDAD_TOTAL DESC;
        
        LV_ID_LIBRO NUMBER;
        LV_CANTIDAD NUMBER;
BEGIN
    OPEN CURSOR_TOTAL;
        DBMS_OUTPUT.PUT_LINE('<<<<<<<<<<<<<<<TOTAL DE VENTAS POR LIBRO>>>>>>>>>>>>>>>>>>' );
        LOOP
            FETCH CURSOR_TOTAL INTO LV_ID_LIBRO, LV_CANTIDAD;
            
            EXIT WHEN CURSOR_TOTAL%NOTFOUND;
            DBMS_OUTPUT.PUT_LINE('EL LIBRO CON ID: ' || LV_ID_LIBRO || ' SE VENDIO UN TOTAL DE: ' || LV_CANTIDAD || ' UNIDADES' );
        END LOOP;
    CLOSE CURSOR_TOTAL;
END PR_TOTAL_VENTA;
/

BEGIN
    PR_TOTAL_VENTA;
END;
/