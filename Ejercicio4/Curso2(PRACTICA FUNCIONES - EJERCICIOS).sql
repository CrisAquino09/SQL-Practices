--REALIZAR LOS SIGUIENTES  EJERCICIOS USANDO LAS FUNCIONES PL/SQL

--1. REALIZAR UNA FUNCION QUE CALCULE EL AREA DE UN CIRCULO Y QUE RECIBA COOMO PARAMETRO EL RADIO
CREATE OR REPLACE FUNCTION FN_AREA_CIRCULO(RADIO IN NUMBER)
RETURN NVARCHAR2
IS
    LV_RESULTADO NVARCHAR2(100);
    LV_AREA NUMBER;
BEGIN
    LV_AREA := 3.14 * (RADIO * RADIO);
    LV_RESULTADO := 'EL AREA DEL CIRCULO ES: ' || LV_AREA  || 'U2';
    RETURN LV_RESULTADO;
END FN_AREA_CIRCULO;
/

SELECT FN_AREA_CIRCULO(4) AS AREA_CIRCULO FROM DUAL;

--2. USAR UNA FUCION QUE RECIBA UN NUMERO DEL 1 AL 12 Y DECUELVA EL NOMBRE DEL MES CORRESPONDIENTE
CREATE OR REPLACE FUNCTION FN_NUMERO_MES (NUMERO IN NUMBER)
RETURN NVARCHAR2
IS
    LV_RESULTADO NVARCHAR2(100);
BEGIN
    CASE NUMERO
        WHEN 1 THEN LV_RESULTADO := 'ENERO';
        WHEN 2 THEN LV_RESULTADO := 'FEBRERO';
        WHEN 3 THEN LV_RESULTADO := 'MARZO';
        WHEN 4 THEN LV_RESULTADO := 'ABRIL';
        WHEN 5 THEN LV_RESULTADO := 'MAYO';
        WHEN 6 THEN LV_RESULTADO := 'JUNIO';
        WHEN 7 THEN LV_RESULTADO := 'JULIO';
        WHEN 8 THEN LV_RESULTADO := 'AGOSTO';
        WHEN 9 THEN LV_RESULTADO := 'SEPTIEMBRE';
        WHEN 10 THEN LV_RESULTADO := 'OCTUBRE';
        WHEN 11 THEN LV_RESULTADO := 'NOVIEMBRE';
        WHEN 12 THEN LV_RESULTADO := 'DICIEMBRE';
        ELSE LV_RESULTADO := 'FUERA DE RANGO';
    END CASE;
    RETURN 'MES: ' || LV_RESULTADO;
END FN_NUMERO_MES;
/

SELECT FN_NUMERO_MES(10) AS MES FROM DUAL;

--3. REALIZA UNA FUNCION QUE RECIBA UN NUMERO Y DEVUELVA SU DOBLE
CREATE OR REPLACE FUNCTION FN_NUMERO_DOBLE(NUMERO IN NUMBER)
RETURN NVARCHAR2
IS
    LV_RESULTADO NVARCHAR2(100);
BEGIN
    LV_RESULTADO := 'EL DOBLE DE ' || NUMERO || ' ES: ' || (NUMERO * 2);
    RETURN LV_RESULTADO;
END FN_NUMERO_DOBLE;
/

SELECT FN_NUMERO_DOBLE(6) AS NUMERO_DOBLE FROM DUAL;

--4. REALIZAR UNA FUNCION QUE CALCULE EL AREA DEL TRIANGULO, QUE RECIBA COMO PARAMETROS LA BASE Y LA ALTURA
CREATE OR REPLACE FUNCTION FN_AREA_TRIANGULO(BASE IN NUMBER, ALTURA IN NUMBER)
RETURN NVARCHAR2
IS
    LV_RESULTADO NVARCHAR2(100);
    LV_AREA NUMBER;
BEGIN
    LV_AREA := (BASE * ALTURA)/2;
    LV_RESULTADO := 'EL AREA DEL TRIANGULO ES: ' || LV_AREA || ' U2';
    RETURN LV_RESULTADO;
END FN_AREA_TRIANGULO;
/

SELECT FN_AREA_TRIANGULO(5,5) AS AREA_TRIANGULO FROM DUAL;

--5. REALIZAR UNA FUNCION QUE RECIBA UN NUMERO DEL 1 AL 7 Y DEVUELVA EL NOMBRE DEL DIA DE LA SEMANA
CREATE OR REPLACE FUNCTION FN_DIA_SEMANA(NUMERO IN NUMBER)
RETURN NVARCHAR2
IS
    LV_RESULTADO NVARCHAR2(100);
BEGIN
    CASE NUMERO
        WHEN 1 THEN LV_RESULTADO:= 'LUNES';
        WHEN 2 THEN LV_RESULTADO:= 'MARTES';
        WHEN 3 THEN LV_RESULTADO:= 'MIERCOLES';
        WHEN 4 THEN LV_RESULTADO:= 'JUEVES';
        WHEN 5 THEN LV_RESULTADO:= 'VIERNES';
        WHEN 6 THEN LV_RESULTADO:= 'SABADO';
        WHEN 7 THEN LV_RESULTADO:= 'DOMINGO';
        ELSE LV_RESULTADO:= 'FUERA DE RANGO';
    END CASE;
    RETURN 'EL DIA ES: ' || LV_RESULTADO;
END FN_DIA_SEMANA;
/

SELECT FN_DIA_SEMANA(4) AS DIA_SEMANA FROM DUAL;

--6. REALIZAR UNA FUNCION QUE RECIBA UNA EDAD Y DEVUELVA UN MENSAJE INDICANDO SI ES MAYOR O MENOR DE EDAD
CREATE OR REPLACE FUNCTION FN_MAYOR_EDAD (EDAD IN NUMBER)
RETURN NVARCHAR2
IS
    LV_RESULTADO NVARCHAR2(100);
BEGIN
    IF EDAD >= 18
    THEN
        LV_RESULTADO := 'ES MAYOR DE EDAD';
    ELSE
        LV_RESULTADO := 'ES MENOR DE EDAD';
    END IF;
    RETURN LV_RESULTADO;
END FN_MAYOR_EDAD;
/

SELECT FN_MAYOR_EDAD(16) AS MAYOR_EDAD FROM DUAL;

--7. REALIZAR UNA FUNCION QUE RECIBA UN NUMERO Y DEVUELVA SU CUADRADO
CREATE OR REPLACE FUNCTION FN_CUADRADO_NUMERO (NUMERO IN NUMBER)
RETURN NVARCHAR2
IS
    LV_RESULTADO NVARCHAR2(100);
BEGIN
    LV_RESULTADO := 'EL CUADRO DEL NUMERO ' || NUMERO || ' ES: ' || (NUMERO * NUMERO);
    RETURN LV_RESULTADO;
END FN_CUADRADO_NUMERO;
/

SELECT FN_CUADRADO_NUMERO(10) AS CUADRADO_NUMERO FROM DUAL;

--8. REALIZAR UNA FUNCION QUE RECIBA UN NUMERO Y DEVUELVA UN MENSAJE INDICANDO SI ES MULTIPLO DE 3 O NO
CREATE OR REPLACE FUNCTION FN_DIVISIBLE_3 (NUMERO IN NUMBER)
RETURN NVARCHAR2
IS
    LV_RESULTADO NVARCHAR2(100);
BEGIN
    IF MOD(NUMERO,3)=0
    THEN
        LV_RESULTADO := 'EL NUMERO '|| NUMERO || ' SI ES MULTIPLO DE 3';
    ELSE
        LV_RESULTADO := 'EL NUMERO ' || NUMERO || ' NO ES MULTIPLO DE 3';
    END IF;
    RETURN LV_RESULTADO;
END FN_DIVISIBLE_3;
/

SELECT FN_DIVISIBLE_3(2) AS DIVISIBLE_EN_3 FROM DUAL;

--9. REALIZAR UNA FUNCION QUE RECIBA DOS CADENAS, NOMBRE Y APELLIDO Y DEVUELVA EL NOMBRE COMPLETO
CREATE OR REPLACE FUNCTION FN_NOMBRE_APELLIDO (NOMBRE IN NVARCHAR2, APELLIDO IN NVARCHAR2)
RETURN NVARCHAR2
IS
BEGIN
    RETURN 'NOMBRE COMPLEDO: ' || NOMBRE || ' ' || APELLIDO;
END FN_NOMBRE_APELLIDO;
/

SELECT FN_NOMBRE_APELLIDO('Cristian', 'Santiago') AS NOMBRE_COMPLETO FROM DUAL;
